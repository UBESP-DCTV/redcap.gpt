[{"path":[]},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement corrado.lanera@ubep.unipd.. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 redcap.gpt authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Corrado Lanera. Author, maintainer. Cinzia Anna Maria Papappicco. Author. Giulia Lorenzoni. Contributor. Dario Gregori. Contributor.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lanera C, Papappicco CAM (2024). redcap.gpt: Package (One Line, Title Case). R package version 0.2.0, https://ubesp-dctv.github.io/redcap.gpt/, https://github.com/UBESP-DCTV/redcap.gpt.","code":"@Manual{,   title = {redcap.gpt: What the Package Does (One Line, Title Case)},   author = {Corrado Lanera and Cinzia Anna Maria Papappicco},   year = {2024},   note = {R package version 0.2.0,     https://ubesp-dctv.github.io/redcap.gpt/},   url = {https://github.com/UBESP-DCTV/redcap.gpt}, }"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/index.html","id":"redcapgpt-","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal redcap.gpt …","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"What the Package Does (One Line, Title Case)","text":"Please note redcap.gpt project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch REDCap form — fetch_form","title":"Fetch REDCap form — fetch_form","text":"Fetch REDCap form","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch REDCap form — fetch_form","text":"","code":"fetch_form(form, .uri = get_redcap_uri(), .token = get_redcap_token())"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch REDCap form — fetch_form","text":"form (chr, length 1) REDCap form fetch. .uri (chr, default: get_redcap_uri()) REDCap URI. .token (chr, default: get_redcap_token()) REDCap token.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch REDCap form — fetch_form","text":"(tbl_df) REDCap form.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch REDCap form — fetch_form","text":"","code":"# \\donttest{   fetch_form(\"followup_postoperatorio_14_30_60_giorno_po\") |>     str(0) #> Error in REDCapTidieR::read_redcap(redcap_uri = .uri, token = .token,     forms = forms): ✖ The token is an empty string, not a valid 32-character hexademical #>   value. #> ℹ API token: `` # }"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_redcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch REDCap DB — fetch_redcap","title":"Fetch REDCap DB — fetch_redcap","text":"Fetch REDCap DB","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_redcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch REDCap DB — fetch_redcap","text":"","code":"fetch_redcap(   .uri = get_redcap_uri(),   .token = get_redcap_token(),   forms = NULL )"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_redcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch REDCap DB — fetch_redcap","text":".uri (chr, default: get_redcap_uri()) REDCap URI. .token (chr, default: get_redcap_token()) REDCap token. forms (chr) vector REDCap forms fetch.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_redcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch REDCap DB — fetch_redcap","text":"(tbl_df) REDCap DB.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/fetch_redcap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch REDCap DB — fetch_redcap","text":"","code":"# \\donttest{   fetch_redcap() |>     str(1) #> Error in REDCapTidieR::read_redcap(redcap_uri = .uri, token = .token,     forms = forms): ✖ The token is an empty string, not a valid 32-character hexademical #>   value. #> ℹ API token: ``    fetch_redcap(     forms = c(       \"followup_postoperatorio_14_30_60_giorno_po\",       \"visita_followup_postoperatorio_90_giorno_po\"     )   ) |>     str(1) #> Error in REDCapTidieR::read_redcap(redcap_uri = .uri, token = .token,     forms = forms): ✖ The token is an empty string, not a valid 32-character hexademical #>   value. #> ℹ API token: `` # }"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_pid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the REDCap project ID from the environment. — get_redcap_pid","title":"Get the REDCap project ID from the environment. — get_redcap_pid","text":"Get REDCap project ID environment.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_pid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the REDCap project ID from the environment. — get_redcap_pid","text":"","code":"get_redcap_pid()"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_pid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the REDCap project ID from the environment. — get_redcap_pid","text":"(int) REDCap project ID.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_pid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the REDCap project ID from the environment. — get_redcap_pid","text":"","code":"get_redcap_pid() #> [1] NA"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the REDCap token from the environment. — get_redcap_token","title":"Get the REDCap token from the environment. — get_redcap_token","text":"Get REDCap token environment.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the REDCap token from the environment. — get_redcap_token","text":"","code":"get_redcap_token()"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the REDCap token from the environment. — get_redcap_token","text":"(chr) REDCap token, invisibly.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the REDCap token from the environment. — get_redcap_token","text":"","code":"get_redcap_token()"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_uri.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the REDCap URI from the environment. — get_redcap_uri","title":"Get the REDCap URI from the environment. — get_redcap_uri","text":"Get REDCap URI environment.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_uri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the REDCap URI from the environment. — get_redcap_uri","text":"","code":"get_redcap_uri()"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_uri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the REDCap URI from the environment. — get_redcap_uri","text":"(chr) REDCap URI.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/get_redcap_uri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the REDCap URI from the environment. — get_redcap_uri","text":"","code":"get_redcap_uri() #> [1] \"\""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/gpt_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"GPT JSON to tibble — gpt_to_tibble","title":"GPT JSON to tibble — gpt_to_tibble","text":"GPT JSON tibble","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/gpt_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GPT JSON to tibble — gpt_to_tibble","text":"","code":"gpt_to_tibble(gpt_json)"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/gpt_to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GPT JSON to tibble — gpt_to_tibble","text":"gpt_json (chr) GPT JSON.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/gpt_to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GPT JSON to tibble — gpt_to_tibble","text":"(tbl_df) GPT tibble.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_checkbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Parser for checkboxes — parse_checkbox","title":"Parser for checkboxes — parse_checkbox","text":"Converts GPT answers yes/logical.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_checkbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parser for checkboxes — parse_checkbox","text":"","code":"parse_checkbox(x)"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_checkbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parser for checkboxes — parse_checkbox","text":"x (chr) character vector parse.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_checkbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parser for checkboxes — parse_checkbox","text":"(lgl) parsed logical vector.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_checkbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parser for checkboxes — parse_checkbox","text":"","code":"parse_checkbox(\"si\") #> [1] 1 parse_checkbox(\"no\") #> [1] 0 parse_checkbox(\"NA\") #> [1] 0 parse_checkbox(\"N/A\") #> [1] 0"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_gpt_fctr.html","id":null,"dir":"Reference","previous_headings":"","what":"Parser for GPT factors — parse_gpt_fctr","title":"Parser for GPT factors — parse_gpt_fctr","text":"Converts GPT strings reporting categories factors, using proper levels derived target factor.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_gpt_fctr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parser for GPT factors — parse_gpt_fctr","text":"","code":"parse_gpt_fctr(from_str, to_fct)"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_gpt_fctr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parser for GPT factors — parse_gpt_fctr","text":"from_str (chr) character vector parse. to_fct (fct) target factor","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_gpt_fctr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parser for GPT factors — parse_gpt_fctr","text":"(fct) parsed factor.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_gpt_fctr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Parser for GPT factors — parse_gpt_fctr","text":"target factor supposed overwritten resulting factor function.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/parse_gpt_fctr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parser for GPT factors — parse_gpt_fctr","text":"","code":"parse_gpt_fctr(c(\"si\", \"no\", \"forse\"), factor(c(\"si\", \"no\"))) #> [1] si           no           Non rilevato #> Levels: no si Non rilevato"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/query_gpt_on_redcap_instrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Query GPT on REDCap instrument — query_gpt_on_redcap_instrument","title":"Query GPT on REDCap instrument — query_gpt_on_redcap_instrument","text":"Query GPT REDCap instrument","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/query_gpt_on_redcap_instrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query GPT on REDCap instrument — query_gpt_on_redcap_instrument","text":"","code":"query_gpt_on_redcap_instrument(   db,   instrument = c(\"note_fup\", \"comments_fup\", \"details_fup\"),   model = \"gpt-4o-mini\",   seed = 1234,   query_on_all_records = FALSE )"},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/query_gpt_on_redcap_instrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query GPT on REDCap instrument — query_gpt_on_redcap_instrument","text":"db (tbl_df) REDCap DB single form. instrument (chr) REDCap instrument form query. model (chr, default: \"gpt-4o-mini\") GPT model use. seed (int, default: 1234) seed GPT model. query_on_all_records (lgl, default: FALSE) TRUE, content \"text_processed_record\" variable (mark record already processed) ignored. FALSE (default) records marked already processed considered.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/query_gpt_on_redcap_instrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query GPT on REDCap instrument — query_gpt_on_redcap_instrument","text":"(tbl_df) REDCap DB GPT responses parsed.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/redcap.gpt-package.html","id":null,"dir":"Reference","previous_headings":"","what":"redcap.gpt: What the Package Does (One Line, Title Case) — redcap.gpt-package","title":"redcap.gpt: What the Package Does (One Line, Title Case) — redcap.gpt-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://ubesp-dctv.github.io/redcap.gpt/reference/redcap.gpt-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"redcap.gpt: What the Package Does (One Line, Title Case) — redcap.gpt-package","text":"Maintainer: Corrado Lanera corrado.lanera@ubep.unipd.(ORCID) Authors: Cinzia Anna Maria Papappicco cinziaannamaria.papappicco@ubep.unipd.(ORCID) contributors: Giulia Lorenzoni giulia.lorenzoni@ubep.unipd.(ORCID) [contributor] Dario Gregori drio.gregori@ubep.unipd.(ORCID) [contributor]","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/news/index.html","id":"redcapgpt-020","dir":"Changelog","previous_headings":"","what":"redcap.gpt 0.2.0","title":"redcap.gpt 0.2.0","text":"allow query_gpt_on_redcap_instrument process whole db setting query_all_records TRUE. change parse_sensazione general parse_checkbox.","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/news/index.html","id":"redcapgpt-011","dir":"Changelog","previous_headings":"","what":"redcap.gpt 0.1.1","title":"redcap.gpt 0.1.1","text":"Added support targets tarchetypes. Fix levels name trend question (fix issue #1).","code":""},{"path":"https://ubesp-dctv.github.io/redcap.gpt/news/index.html","id":"redcapgpt-010","dir":"Changelog","previous_headings":"","what":"redcap.gpt 0.1.0","title":"redcap.gpt 0.1.0","text":"Change factors logical behavior accordingly REDCapR specification writing REDCap. Add query_gpt_on_redcap_instrument() extract () information interest instrument identified. Add parse_sensazione() parse_gpt_fctr() parse gpt categories extracted form answers, converting (respectively) logical vectors, factors proper levels. Add gpt_to_tibble() parse gpt JSON hierarchical responses suitable, flat, tibble. Add fetch_redcap() fetch_form() fetch data REDCap project. Provided templates (.Renviron-template, dev/redcap-credentials.csv) example usage (analyses/connect.R) connect REDCap project. Add get_redcap_uri(), get_redcap_pid(), get_redcap_token() safely read environmental variable setup connection project. Setup GitHub environment. Setup dev environment.","code":""}]
